{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{useParams}from'react-router-dom';import SockJS from'sockjs-client';import{Client}from'@stomp/stompjs';import{Table,Pagination,PaginationItem,PaginationLink,Spinner}from'reactstrap';import'bootstrap/dist/css/bootstrap.min.css';import api from\"../api\";import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const AnswerPage=()=>{const{testId}=useParams();const[answers,setAnswers]=useState([]);const[fields,setFields]=useState([]);const[count,setCount]=useState(0);const[page,setPage]=useState(0);const[totalPages,setTotalPages]=useState(1);const[loading,setLoading]=useState(true);const pageSize=16;const[testName,setTestName]=useState('');const stompRef=useRef(null);const loadAnswers=async function(){let pageToLoad=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;setLoading(true);try{const res=await api.get(\"/answer/get/\".concat(testId),{params:{page:pageToLoad,size:pageSize}});const content=res.data.content||[];setAnswers(content);setTotalPages(res.data.totalPages||1);setPage(res.data.number||0);setCount(res.data.totalElements||0);if(content.length>0){setTestName(content[0].questionnaireName||'');if(content[0].fields){setFields(content[0].fields);}}}catch(err){console.error(\"Ошибка при загрузке ответов:\",err);}finally{setLoading(false);}};useEffect(()=>{loadAnswers();},[testId]);useEffect(()=>{const token=sessionStorage.getItem('accessToken');const api=axios.create({baseURL:process.env.REACT_APP_API_URL||''});const socket=new SockJS(\"\".concat(api.defaults.baseURL,\"/ws?access_token=\").concat(token));const stompClient=new Client({webSocketFactory:()=>socket,connectHeaders:{Authorization:\"Bearer \".concat(token)},onConnect:()=>{stompClient.subscribe(\"/topic/test/\".concat(testId,\"/answers/count\"),message=>{const data=JSON.parse(message.body);setCount(data.count);setTotalPages(Math.ceil(data.count/pageSize));});stompClient.subscribe(\"/topic/test/\".concat(testId,\"/answers/new\"),message=>{const newAnswer=JSON.parse(message.body);// Только если мы на первой странице\nif(page===0){setAnswers(prev=>{const updated=[newAnswer,...prev];return updated.slice(0,pageSize);// максимум pageSize элементов\n});}// Не меняем fields, если они уже есть\nif(newAnswer.fields&&newAnswer.fields.length>0){setFields(newAnswer.fields);}// Обновляем имя теста, если нужно\nif(newAnswer.questionnaireName){setTestName(newAnswer.questionnaireName);}});},debug:()=>{},reconnectDelay:5000});stompClient.activate();stompRef.current=stompClient;return()=>{var _stompRef$current;(_stompRef$current=stompRef.current)===null||_stompRef$current===void 0?void 0:_stompRef$current.deactivate();stompRef.current=null;};},[testId,page]);const handlePageChange=newPage=>{if(newPage>=0&&newPage<totalPages){loadAnswers(newPage);}};return/*#__PURE__*/_jsx(\"div\",{className:\"container mt-5\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsx(\"h4\",{children:testName}),/*#__PURE__*/_jsxs(\"span\",{className:\"badge bg-primary fs-5\",children:[\"\\u043A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043E\\u0442\\u0432\\u0435\\u0442\\u043E\\u0432: \",count]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-body\",children:loading?/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsx(Spinner,{color:\"primary\"})}):answers.length>0?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Table,{bordered:true,hover:true,responsive:true,children:[/*#__PURE__*/_jsx(\"thead\",{className:\"table-light\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"#\"}),fields.map(field=>/*#__PURE__*/_jsx(\"th\",{children:field.label},field.id))]})}),/*#__PURE__*/_jsx(\"tbody\",{children:answers.map((answer,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:index+1+page*pageSize}),fields.map(field=>{const match=answer.answers.find(a=>a.fieldId===field.id);return/*#__PURE__*/_jsx(\"td\",{children:match?match.value:'-'},field.id);})]},answer.id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-end\",children:/*#__PURE__*/_jsxs(Pagination,{size:\"sm\",children:[/*#__PURE__*/_jsx(PaginationItem,{disabled:page===0,children:/*#__PURE__*/_jsx(PaginationLink,{first:true,onClick:()=>handlePageChange(0)})}),/*#__PURE__*/_jsx(PaginationItem,{disabled:page===0,children:/*#__PURE__*/_jsx(PaginationLink,{previous:true,onClick:()=>handlePageChange(page-1)})}),Array.from({length:totalPages},(_,i)=>i).filter(i=>i===0||i===totalPages-1||Math.abs(i-page)<=1).map(i=>/*#__PURE__*/_jsx(PaginationItem,{active:i===page,children:/*#__PURE__*/_jsx(PaginationLink,{onClick:()=>handlePageChange(i),children:i+1})},i)),/*#__PURE__*/_jsx(PaginationItem,{disabled:page>=totalPages-1,children:/*#__PURE__*/_jsx(PaginationLink,{next:true,onClick:()=>handlePageChange(page+1)})}),/*#__PURE__*/_jsx(PaginationItem,{disabled:page>=totalPages-1,children:/*#__PURE__*/_jsx(PaginationLink,{last:true,onClick:()=>handlePageChange(totalPages-1)})})]})})]}):/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:\"\\u041E\\u0442\\u0432\\u0435\\u0442\\u043E\\u0432 \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442.\"})})]})});};export default AnswerPage;","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","SockJS","Client","Table","Pagination","PaginationItem","PaginationLink","Spinner","api","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AnswerPage","testId","answers","setAnswers","fields","setFields","count","setCount","page","setPage","totalPages","setTotalPages","loading","setLoading","pageSize","testName","setTestName","stompRef","loadAnswers","pageToLoad","arguments","length","undefined","res","get","concat","params","size","content","data","number","totalElements","questionnaireName","err","console","error","token","sessionStorage","getItem","create","baseURL","process","env","REACT_APP_API_URL","socket","defaults","stompClient","webSocketFactory","connectHeaders","Authorization","onConnect","subscribe","message","JSON","parse","body","Math","ceil","newAnswer","prev","updated","slice","debug","reconnectDelay","activate","current","_stompRef$current","deactivate","handlePageChange","newPage","className","children","color","bordered","hover","responsive","map","field","label","id","answer","index","match","find","a","fieldId","value","disabled","first","onClick","previous","Array","from","_","i","filter","abs","active","next","last"],"sources":["D:/progects/SoftArex/frontend/src/pages/ResponsesPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport SockJS from 'sockjs-client';\r\nimport { Client } from '@stomp/stompjs';\r\nimport {\r\n    Table,\r\n    Pagination, PaginationItem, PaginationLink,\r\n    Spinner\r\n} from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport api from \"../api\";\r\nimport axios from \"axios\";\r\n\r\nconst AnswerPage = () => {\r\n    const { testId } = useParams();\r\n    const [answers, setAnswers] = useState([]);\r\n    const [fields, setFields] = useState([]);\r\n    const [count, setCount] = useState(0);\r\n    const [page, setPage] = useState(0);\r\n    const [totalPages, setTotalPages] = useState(1);\r\n    const [loading, setLoading] = useState(true);\r\n    const pageSize = 16;\r\n\r\n    const [testName, setTestName] = useState('');\r\n    const stompRef = useRef(null);\r\n\r\n    const loadAnswers = async (pageToLoad = 0) => {\r\n        setLoading(true);\r\n        try {\r\n            const res = await api.get(`/answer/get/${testId}`, {\r\n                params: { page: pageToLoad, size: pageSize }\r\n            });\r\n\r\n            const content = res.data.content || [];\r\n            setAnswers(content);\r\n            setTotalPages(res.data.totalPages || 1);\r\n            setPage(res.data.number || 0);\r\n            setCount(res.data.totalElements || 0);\r\n\r\n            if (content.length > 0) {\r\n                setTestName(content[0].questionnaireName || '');\r\n                if (content[0].fields) {\r\n                    setFields(content[0].fields);\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Ошибка при загрузке ответов:\", err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadAnswers();\r\n    }, [testId]);\r\n\r\n    useEffect(() => {\r\n        const token = sessionStorage.getItem('accessToken');\r\n        const api = axios.create({\r\n            baseURL: process.env.REACT_APP_API_URL || '',\r\n        });\r\n        const socket = new SockJS(`${api.defaults.baseURL}/ws?access_token=${token}`);\r\n        const stompClient = new Client({\r\n            webSocketFactory: () => socket,\r\n            connectHeaders: {\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n            onConnect: () => {\r\n                stompClient.subscribe(`/topic/test/${testId}/answers/count`, (message) => {\r\n                    const data = JSON.parse(message.body);\r\n                    setCount(data.count);\r\n                    setTotalPages(Math.ceil(data.count / pageSize));\r\n                });\r\n\r\n                stompClient.subscribe(`/topic/test/${testId}/answers/new`, (message) => {\r\n                    const newAnswer = JSON.parse(message.body);\r\n\r\n                    // Только если мы на первой странице\r\n                    if (page === 0) {\r\n                        setAnswers(prev => {\r\n                            const updated = [newAnswer, ...prev];\r\n                            return updated.slice(0, pageSize); // максимум pageSize элементов\r\n                        });\r\n                    }\r\n\r\n                    // Не меняем fields, если они уже есть\r\n                    if (newAnswer.fields && newAnswer.fields.length > 0) {\r\n                        setFields(newAnswer.fields);\r\n                    }\r\n\r\n                    // Обновляем имя теста, если нужно\r\n                    if (newAnswer.questionnaireName) {\r\n                        setTestName(newAnswer.questionnaireName);\r\n                    }\r\n                });\r\n            },\r\n            debug: () => {},\r\n            reconnectDelay: 5000,\r\n        });\r\n\r\n        stompClient.activate();\r\n        stompRef.current = stompClient;\r\n\r\n        return () => {\r\n            stompRef.current?.deactivate();\r\n            stompRef.current = null;\r\n        };\r\n    }, [testId, page]);\r\n\r\n    const handlePageChange = (newPage) => {\r\n        if (newPage >= 0 && newPage < totalPages) {\r\n            loadAnswers(newPage);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"card\">\r\n                <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n                    <h4>{testName}</h4>\r\n                    <span className=\"badge bg-primary fs-5\">количество ответов: {count}</span>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    {loading ? (\r\n                        <div className=\"text-center\">\r\n                            <Spinner color=\"primary\" />\r\n                        </div>\r\n                    ) : answers.length > 0 ? (\r\n                        <>\r\n                            <Table bordered hover responsive>\r\n                                <thead className=\"table-light\">\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    {fields.map(field => (\r\n                                        <th key={field.id}>{field.label}</th>\r\n                                    ))}\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {answers.map((answer, index) => (\r\n                                    <tr key={answer.id}>\r\n                                        <td>{index + 1 + page * pageSize}</td>\r\n                                        {fields.map(field => {\r\n                                            const match = answer.answers.find(a => a.fieldId === field.id);\r\n                                            return <td key={field.id}>{match ? match.value : '-'}</td>;\r\n                                        })}\r\n                                    </tr>\r\n                                ))}\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <Pagination size=\"sm\">\r\n                                    <PaginationItem disabled={page === 0}>\r\n                                        <PaginationLink first onClick={() => handlePageChange(0)} />\r\n                                    </PaginationItem>\r\n                                    <PaginationItem disabled={page === 0}>\r\n                                        <PaginationLink previous onClick={() => handlePageChange(page - 1)} />\r\n                                    </PaginationItem>\r\n\r\n\r\n                                    {Array.from({ length: totalPages }, (_, i) => i)\r\n                                        .filter(i => i === 0 || i === totalPages - 1 || Math.abs(i - page) <= 1)\r\n                                        .map(i => (\r\n                                            <PaginationItem key={i} active={i === page}>\r\n                                                <PaginationLink onClick={() => handlePageChange(i)}>\r\n                                                    {i + 1}\r\n                                                </PaginationLink>\r\n                                            </PaginationItem>\r\n                                        ))}\r\n\r\n                                    <PaginationItem disabled={page >= totalPages - 1}>\r\n                                        <PaginationLink next onClick={() => handlePageChange(page + 1)} />\r\n                                    </PaginationItem>\r\n                                    <PaginationItem disabled={page >= totalPages - 1}>\r\n                                        <PaginationLink last onClick={() => handlePageChange(totalPages - 1)} />\r\n                                    </PaginationItem>\r\n                                </Pagination>\r\n\r\n                            </div>\r\n                        </>\r\n                    ) : (\r\n                        <p className=\"text-muted\">Ответов пока нет.</p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnswerPage;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAC1D,OAASC,SAAS,KAAQ,kBAAkB,CAC5C,MAAO,CAAAC,MAAM,KAAM,eAAe,CAClC,OAASC,MAAM,KAAQ,gBAAgB,CACvC,OACIC,KAAK,CACLC,UAAU,CAAEC,cAAc,CAAEC,cAAc,CAC1CC,OAAO,KACJ,YAAY,CACnB,MAAO,sCAAsC,CAC7C,MAAO,CAAAC,GAAG,KAAM,QAAQ,CACxB,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE1B,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACrB,KAAM,CAAEC,MAAO,CAAC,CAAGjB,SAAS,CAAC,CAAC,CAC9B,KAAM,CAACkB,OAAO,CAAEC,UAAU,CAAC,CAAGtB,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACuB,MAAM,CAAEC,SAAS,CAAC,CAAGxB,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACyB,KAAK,CAAEC,QAAQ,CAAC,CAAG1B,QAAQ,CAAC,CAAC,CAAC,CACrC,KAAM,CAAC2B,IAAI,CAAEC,OAAO,CAAC,CAAG5B,QAAQ,CAAC,CAAC,CAAC,CACnC,KAAM,CAAC6B,UAAU,CAAEC,aAAa,CAAC,CAAG9B,QAAQ,CAAC,CAAC,CAAC,CAC/C,KAAM,CAAC+B,OAAO,CAAEC,UAAU,CAAC,CAAGhC,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAAAiC,QAAQ,CAAG,EAAE,CAEnB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGnC,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAAAoC,QAAQ,CAAGlC,MAAM,CAAC,IAAI,CAAC,CAE7B,KAAM,CAAAmC,WAAW,CAAG,cAAAA,CAAA,CAA0B,IAAnB,CAAAC,UAAU,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CACrCP,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACA,KAAM,CAAAU,GAAG,CAAG,KAAM,CAAA/B,GAAG,CAACgC,GAAG,gBAAAC,MAAA,CAAgBxB,MAAM,EAAI,CAC/CyB,MAAM,CAAE,CAAElB,IAAI,CAAEW,UAAU,CAAEQ,IAAI,CAAEb,QAAS,CAC/C,CAAC,CAAC,CAEF,KAAM,CAAAc,OAAO,CAAGL,GAAG,CAACM,IAAI,CAACD,OAAO,EAAI,EAAE,CACtCzB,UAAU,CAACyB,OAAO,CAAC,CACnBjB,aAAa,CAACY,GAAG,CAACM,IAAI,CAACnB,UAAU,EAAI,CAAC,CAAC,CACvCD,OAAO,CAACc,GAAG,CAACM,IAAI,CAACC,MAAM,EAAI,CAAC,CAAC,CAC7BvB,QAAQ,CAACgB,GAAG,CAACM,IAAI,CAACE,aAAa,EAAI,CAAC,CAAC,CAErC,GAAIH,OAAO,CAACP,MAAM,CAAG,CAAC,CAAE,CACpBL,WAAW,CAACY,OAAO,CAAC,CAAC,CAAC,CAACI,iBAAiB,EAAI,EAAE,CAAC,CAC/C,GAAIJ,OAAO,CAAC,CAAC,CAAC,CAACxB,MAAM,CAAE,CACnBC,SAAS,CAACuB,OAAO,CAAC,CAAC,CAAC,CAACxB,MAAM,CAAC,CAChC,CACJ,CACJ,CAAE,MAAO6B,GAAG,CAAE,CACVC,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAEF,GAAG,CAAC,CACtD,CAAC,OAAS,CACNpB,UAAU,CAAC,KAAK,CAAC,CACrB,CACJ,CAAC,CAED/B,SAAS,CAAC,IAAM,CACZoC,WAAW,CAAC,CAAC,CACjB,CAAC,CAAE,CAACjB,MAAM,CAAC,CAAC,CAEZnB,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAsD,KAAK,CAAGC,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC,CACnD,KAAM,CAAA9C,GAAG,CAAGC,KAAK,CAAC8C,MAAM,CAAC,CACrBC,OAAO,CAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,EAC9C,CAAC,CAAC,CACF,KAAM,CAAAC,MAAM,CAAG,GAAI,CAAA3D,MAAM,IAAAwC,MAAA,CAAIjC,GAAG,CAACqD,QAAQ,CAACL,OAAO,sBAAAf,MAAA,CAAoBW,KAAK,CAAE,CAAC,CAC7E,KAAM,CAAAU,WAAW,CAAG,GAAI,CAAA5D,MAAM,CAAC,CAC3B6D,gBAAgB,CAAEA,CAAA,GAAMH,MAAM,CAC9BI,cAAc,CAAE,CACZC,aAAa,WAAAxB,MAAA,CAAYW,KAAK,CAClC,CAAC,CACDc,SAAS,CAAEA,CAAA,GAAM,CACbJ,WAAW,CAACK,SAAS,gBAAA1B,MAAA,CAAgBxB,MAAM,mBAAmBmD,OAAO,EAAK,CACtE,KAAM,CAAAvB,IAAI,CAAGwB,IAAI,CAACC,KAAK,CAACF,OAAO,CAACG,IAAI,CAAC,CACrChD,QAAQ,CAACsB,IAAI,CAACvB,KAAK,CAAC,CACpBK,aAAa,CAAC6C,IAAI,CAACC,IAAI,CAAC5B,IAAI,CAACvB,KAAK,CAAGQ,QAAQ,CAAC,CAAC,CACnD,CAAC,CAAC,CAEFgC,WAAW,CAACK,SAAS,gBAAA1B,MAAA,CAAgBxB,MAAM,iBAAiBmD,OAAO,EAAK,CACpE,KAAM,CAAAM,SAAS,CAAGL,IAAI,CAACC,KAAK,CAACF,OAAO,CAACG,IAAI,CAAC,CAE1C;AACA,GAAI/C,IAAI,GAAK,CAAC,CAAE,CACZL,UAAU,CAACwD,IAAI,EAAI,CACf,KAAM,CAAAC,OAAO,CAAG,CAACF,SAAS,CAAE,GAAGC,IAAI,CAAC,CACpC,MAAO,CAAAC,OAAO,CAACC,KAAK,CAAC,CAAC,CAAE/C,QAAQ,CAAC,CAAE;AACvC,CAAC,CAAC,CACN,CAEA;AACA,GAAI4C,SAAS,CAACtD,MAAM,EAAIsD,SAAS,CAACtD,MAAM,CAACiB,MAAM,CAAG,CAAC,CAAE,CACjDhB,SAAS,CAACqD,SAAS,CAACtD,MAAM,CAAC,CAC/B,CAEA;AACA,GAAIsD,SAAS,CAAC1B,iBAAiB,CAAE,CAC7BhB,WAAW,CAAC0C,SAAS,CAAC1B,iBAAiB,CAAC,CAC5C,CACJ,CAAC,CAAC,CACN,CAAC,CACD8B,KAAK,CAAEA,CAAA,GAAM,CAAC,CAAC,CACfC,cAAc,CAAE,IACpB,CAAC,CAAC,CAEFjB,WAAW,CAACkB,QAAQ,CAAC,CAAC,CACtB/C,QAAQ,CAACgD,OAAO,CAAGnB,WAAW,CAE9B,MAAO,IAAM,KAAAoB,iBAAA,CACT,CAAAA,iBAAA,CAAAjD,QAAQ,CAACgD,OAAO,UAAAC,iBAAA,iBAAhBA,iBAAA,CAAkBC,UAAU,CAAC,CAAC,CAC9BlD,QAAQ,CAACgD,OAAO,CAAG,IAAI,CAC3B,CAAC,CACL,CAAC,CAAE,CAAChE,MAAM,CAAEO,IAAI,CAAC,CAAC,CAElB,KAAM,CAAA4D,gBAAgB,CAAIC,OAAO,EAAK,CAClC,GAAIA,OAAO,EAAI,CAAC,EAAIA,OAAO,CAAG3D,UAAU,CAAE,CACtCQ,WAAW,CAACmD,OAAO,CAAC,CACxB,CACJ,CAAC,CAED,mBACI1E,IAAA,QAAK2E,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAC3B1E,KAAA,QAAKyE,SAAS,CAAC,MAAM,CAAAC,QAAA,eACjB1E,KAAA,QAAKyE,SAAS,CAAC,+DAA+D,CAAAC,QAAA,eAC1E5E,IAAA,OAAA4E,QAAA,CAAKxD,QAAQ,CAAK,CAAC,cACnBlB,KAAA,SAAMyE,SAAS,CAAC,uBAAuB,CAAAC,QAAA,EAAC,2GAAoB,CAACjE,KAAK,EAAO,CAAC,EACzE,CAAC,cACNX,IAAA,QAAK2E,SAAS,CAAC,WAAW,CAAAC,QAAA,CACrB3D,OAAO,cACJjB,IAAA,QAAK2E,SAAS,CAAC,aAAa,CAAAC,QAAA,cACxB5E,IAAA,CAACJ,OAAO,EAACiF,KAAK,CAAC,SAAS,CAAE,CAAC,CAC1B,CAAC,CACNtE,OAAO,CAACmB,MAAM,CAAG,CAAC,cAClBxB,KAAA,CAAAE,SAAA,EAAAwE,QAAA,eACI1E,KAAA,CAACV,KAAK,EAACsF,QAAQ,MAACC,KAAK,MAACC,UAAU,MAAAJ,QAAA,eAC5B5E,IAAA,UAAO2E,SAAS,CAAC,aAAa,CAAAC,QAAA,cAC9B1E,KAAA,OAAA0E,QAAA,eACI5E,IAAA,OAAA4E,QAAA,CAAI,GAAC,CAAI,CAAC,CACTnE,MAAM,CAACwE,GAAG,CAACC,KAAK,eACblF,IAAA,OAAA4E,QAAA,CAAoBM,KAAK,CAACC,KAAK,EAAtBD,KAAK,CAACE,EAAqB,CACvC,CAAC,EACF,CAAC,CACE,CAAC,cACRpF,IAAA,UAAA4E,QAAA,CACCrE,OAAO,CAAC0E,GAAG,CAAC,CAACI,MAAM,CAAEC,KAAK,gBACvBpF,KAAA,OAAA0E,QAAA,eACI5E,IAAA,OAAA4E,QAAA,CAAKU,KAAK,CAAG,CAAC,CAAGzE,IAAI,CAAGM,QAAQ,CAAK,CAAC,CACrCV,MAAM,CAACwE,GAAG,CAACC,KAAK,EAAI,CACjB,KAAM,CAAAK,KAAK,CAAGF,MAAM,CAAC9E,OAAO,CAACiF,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACC,OAAO,GAAKR,KAAK,CAACE,EAAE,CAAC,CAC9D,mBAAOpF,IAAA,OAAA4E,QAAA,CAAoBW,KAAK,CAAGA,KAAK,CAACI,KAAK,CAAG,GAAG,EAApCT,KAAK,CAACE,EAAmC,CAAC,CAC9D,CAAC,CAAC,GALGC,MAAM,CAACD,EAMZ,CACP,CAAC,CACK,CAAC,EACL,CAAC,cAERpF,IAAA,QAAK2E,SAAS,CAAC,4BAA4B,CAAAC,QAAA,cACvC1E,KAAA,CAACT,UAAU,EAACuC,IAAI,CAAC,IAAI,CAAA4C,QAAA,eACjB5E,IAAA,CAACN,cAAc,EAACkG,QAAQ,CAAE/E,IAAI,GAAK,CAAE,CAAA+D,QAAA,cACjC5E,IAAA,CAACL,cAAc,EAACkG,KAAK,MAACC,OAAO,CAAEA,CAAA,GAAMrB,gBAAgB,CAAC,CAAC,CAAE,CAAE,CAAC,CAChD,CAAC,cACjBzE,IAAA,CAACN,cAAc,EAACkG,QAAQ,CAAE/E,IAAI,GAAK,CAAE,CAAA+D,QAAA,cACjC5E,IAAA,CAACL,cAAc,EAACoG,QAAQ,MAACD,OAAO,CAAEA,CAAA,GAAMrB,gBAAgB,CAAC5D,IAAI,CAAG,CAAC,CAAE,CAAE,CAAC,CAC1D,CAAC,CAGhBmF,KAAK,CAACC,IAAI,CAAC,CAAEvE,MAAM,CAAEX,UAAW,CAAC,CAAE,CAACmF,CAAC,CAAEC,CAAC,GAAKA,CAAC,CAAC,CAC3CC,MAAM,CAACD,CAAC,EAAIA,CAAC,GAAK,CAAC,EAAIA,CAAC,GAAKpF,UAAU,CAAG,CAAC,EAAI8C,IAAI,CAACwC,GAAG,CAACF,CAAC,CAAGtF,IAAI,CAAC,EAAI,CAAC,CAAC,CACvEoE,GAAG,CAACkB,CAAC,eACFnG,IAAA,CAACN,cAAc,EAAS4G,MAAM,CAAEH,CAAC,GAAKtF,IAAK,CAAA+D,QAAA,cACvC5E,IAAA,CAACL,cAAc,EAACmG,OAAO,CAAEA,CAAA,GAAMrB,gBAAgB,CAAC0B,CAAC,CAAE,CAAAvB,QAAA,CAC9CuB,CAAC,CAAG,CAAC,CACM,CAAC,EAHAA,CAIL,CACnB,CAAC,cAENnG,IAAA,CAACN,cAAc,EAACkG,QAAQ,CAAE/E,IAAI,EAAIE,UAAU,CAAG,CAAE,CAAA6D,QAAA,cAC7C5E,IAAA,CAACL,cAAc,EAAC4G,IAAI,MAACT,OAAO,CAAEA,CAAA,GAAMrB,gBAAgB,CAAC5D,IAAI,CAAG,CAAC,CAAE,CAAE,CAAC,CACtD,CAAC,cACjBb,IAAA,CAACN,cAAc,EAACkG,QAAQ,CAAE/E,IAAI,EAAIE,UAAU,CAAG,CAAE,CAAA6D,QAAA,cAC7C5E,IAAA,CAACL,cAAc,EAAC6G,IAAI,MAACV,OAAO,CAAEA,CAAA,GAAMrB,gBAAgB,CAAC1D,UAAU,CAAG,CAAC,CAAE,CAAE,CAAC,CAC5D,CAAC,EACT,CAAC,CAEZ,CAAC,EACR,CAAC,cAEHf,IAAA,MAAG2E,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,yFAAiB,CAAG,CACjD,CACA,CAAC,EACL,CAAC,CACL,CAAC,CAEd,CAAC,CAED,cAAe,CAAAvE,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}