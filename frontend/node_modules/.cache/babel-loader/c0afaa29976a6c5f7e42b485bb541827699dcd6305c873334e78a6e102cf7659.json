{"ast":null,"code":"import _objectSpread from\"D:/progects/SoftArex/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Modal,ModalHeader,ModalBody,Form,FormGroup,Label,Input,Button,Alert}from'reactstrap';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const fieldTypes=[{label:\"Single line text\",value:\"TEXT_SINGLE_LINE\"},{label:\"Multiline text\",value:\"TEXT_MULTILINE\"},{label:\"Radio button\",value:\"RADIO_BUTTON\"},{label:\"Checkbox\",value:\"CHECKBOX\"},{label:\"Combobox\",value:\"COMBOBOX\"},{label:\"Date\",value:\"DATE\"}];const FieldModal=_ref=>{let{isOpen,toggle,field,onSave}=_ref;const[formData,setFormData]=useState({label:'',type:'COMBOBOX',options:'',required:false,active:true});const[error,setError]=useState('');useEffect(()=>{if(field){var _field$required,_field$active;setFormData({label:field.label||'',type:field.type||'COMBOBOX',options:(field.options||[]).join('\\n'),required:(_field$required=field.required)!==null&&_field$required!==void 0?_field$required:false,active:(_field$active=field.active)!==null&&_field$active!==void 0?_field$active:true});}else{setFormData({label:'',type:'COMBOBOX',options:'',required:false,active:true});}setError('');},[field,isOpen]);const handleChange=e=>{const{name,value,type,checked}=e.target;setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:type==='checkbox'?checked:value}));};const handleSave=()=>{if(!formData.label.trim()){setError('Label is required.');return;}const needsOptions=['RADIO_BUTTON','CHECKBOX','COMBOBOX'].includes(formData.type);const optionsArray=needsOptions?formData.options.split('\\n').filter(o=>o.trim()!==''):[];if(needsOptions&&optionsArray.length===0){setError('Options are required for this field type.');return;}setError('');onSave(_objectSpread(_objectSpread({},formData),{},{options:optionsArray}));};return/*#__PURE__*/_jsxs(Modal,{isOpen:isOpen,toggle:toggle,backdrop:\"static\",children:[/*#__PURE__*/_jsx(ModalHeader,{toggle:toggle,children:field?'Edit Field':'Add Field'}),/*#__PURE__*/_jsxs(ModalBody,{children:[error&&/*#__PURE__*/_jsx(Alert,{color:\"danger\",children:error}),/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsxs(Label,{for:\"label\",children:[\"Label\",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsx(Input,{type:\"text\",name:\"label\",id:\"label\",value:formData.label,onChange:handleChange,placeholder:\"Field name\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsxs(Label,{for:\"type\",children:[\"Type\",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsx(Input,{type:\"select\",name:\"type\",id:\"type\",value:formData.type,onChange:handleChange,children:fieldTypes.map(ft=>/*#__PURE__*/_jsx(\"option\",{value:ft.value,children:ft.label},ft.value))})]}),['RADIO_BUTTON','CHECKBOX','COMBOBOX'].includes(formData.type)&&/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsxs(Label,{for:\"options\",children:[\"Options\",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsx(Input,{type:\"textarea\",name:\"options\",id:\"options\",rows:\"4\",value:formData.options,onChange:handleChange,placeholder:\"One option per line\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex gap-4 mt-2 mb-2\",children:[/*#__PURE__*/_jsx(FormGroup,{check:true,className:\"mb-0\",children:/*#__PURE__*/_jsxs(Label,{check:true,children:[/*#__PURE__*/_jsx(Input,{type:\"checkbox\",name:\"required\",checked:formData.required,onChange:handleChange}),' ',\"Required\"]})}),/*#__PURE__*/_jsx(FormGroup,{check:true,className:\"mb-0\",children:/*#__PURE__*/_jsxs(Label,{check:true,children:[/*#__PURE__*/_jsx(Input,{type:\"checkbox\",name:\"active\",checked:formData.active,onChange:handleChange}),' ',\"Is Active\"]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-end mt-4\",children:[/*#__PURE__*/_jsx(Button,{color:\"secondary\",onClick:toggle,className:\"me-2\",children:\"CANCEL\"}),/*#__PURE__*/_jsx(Button,{color:\"primary\",onClick:handleSave,children:\"SAVE\"})]})]})]})]});};export default FieldModal;","map":{"version":3,"names":["React","useState","useEffect","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","Button","Alert","jsx","_jsx","jsxs","_jsxs","fieldTypes","label","value","FieldModal","_ref","isOpen","toggle","field","onSave","formData","setFormData","type","options","required","active","error","setError","_field$required","_field$active","join","handleChange","e","name","checked","target","prev","_objectSpread","handleSave","trim","needsOptions","includes","optionsArray","split","filter","o","length","backdrop","children","color","for","className","id","onChange","placeholder","map","ft","rows","check","onClick"],"sources":["D:/progects/SoftArex/frontend/src/modalWindows/FieldAddModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Label, Input, Button, Alert\r\n} from 'reactstrap';\r\n\r\nconst fieldTypes = [\r\n    { label: \"Single line text\", value: \"TEXT_SINGLE_LINE\" },\r\n    { label: \"Multiline text\", value: \"TEXT_MULTILINE\" },\r\n    { label: \"Radio button\", value: \"RADIO_BUTTON\" },\r\n    { label: \"Checkbox\", value: \"CHECKBOX\" },\r\n    { label: \"Combobox\", value: \"COMBOBOX\" },\r\n    { label: \"Date\", value: \"DATE\" },\r\n];\r\n\r\nconst FieldModal = ({ isOpen, toggle, field, onSave }) => {\r\n    const [formData, setFormData] = useState({\r\n        label: '',\r\n        type: 'COMBOBOX',\r\n        options: '',\r\n        required: false,\r\n        active: true\r\n    });\r\n\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (field) {\r\n            setFormData({\r\n                label: field.label || '',\r\n                type: field.type || 'COMBOBOX',\r\n                options: (field.options || []).join('\\n'),\r\n                required: field.required ?? false,\r\n                active: field.active ?? true\r\n            });\r\n        } else {\r\n            setFormData({\r\n                label: '',\r\n                type: 'COMBOBOX',\r\n                options: '',\r\n                required: false,\r\n                active: true\r\n            });\r\n        }\r\n        setError('');\r\n    }, [field, isOpen]);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value, type, checked } = e.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: type === 'checkbox' ? checked : value\r\n        }));\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (!formData.label.trim()) {\r\n            setError('Label is required.');\r\n            return;\r\n        }\r\n\r\n        const needsOptions = ['RADIO_BUTTON', 'CHECKBOX', 'COMBOBOX'].includes(formData.type);\r\n        const optionsArray = needsOptions\r\n            ? formData.options.split('\\n').filter(o => o.trim() !== '')\r\n            : [];\r\n\r\n        if (needsOptions && optionsArray.length === 0) {\r\n            setError('Options are required for this field type.');\r\n            return;\r\n        }\r\n\r\n        setError('');\r\n        onSave({\r\n            ...formData,\r\n            options: optionsArray\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Modal isOpen={isOpen} toggle={toggle} backdrop=\"static\">\r\n            <ModalHeader toggle={toggle}>\r\n                {field ? 'Edit Field' : 'Add Field'}\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                {error && (\r\n                    <Alert color=\"danger\">\r\n                        {error}\r\n                    </Alert>\r\n                )}\r\n                <Form>\r\n                    <FormGroup>\r\n                        <Label for=\"label\">Label<span className=\"text-danger\">*</span></Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"label\"\r\n                            id=\"label\"\r\n                            value={formData.label}\r\n                            onChange={handleChange}\r\n                            placeholder=\"Field name\"\r\n                        />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <Label for=\"type\">Type<span className=\"text-danger\">*</span></Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"type\"\r\n                            id=\"type\"\r\n                            value={formData.type}\r\n                            onChange={handleChange}\r\n                        >\r\n                            {fieldTypes.map(ft => (\r\n                                <option key={ft.value} value={ft.value}>\r\n                                    {ft.label}\r\n                                </option>\r\n                            ))}\r\n                        </Input>\r\n                    </FormGroup>\r\n\r\n                    {['RADIO_BUTTON', 'CHECKBOX', 'COMBOBOX'].includes(formData.type) && (\r\n                        <FormGroup>\r\n                            <Label for=\"options\">Options<span className=\"text-danger\">*</span></Label>\r\n                            <Input\r\n                                type=\"textarea\"\r\n                                name=\"options\"\r\n                                id=\"options\"\r\n                                rows=\"4\"\r\n                                value={formData.options}\r\n                                onChange={handleChange}\r\n                                placeholder=\"One option per line\"\r\n                            />\r\n                        </FormGroup>\r\n                    )}\r\n\r\n                    <div className=\"d-flex gap-4 mt-2 mb-2\">\r\n                        <FormGroup check className=\"mb-0\">\r\n                            <Label check>\r\n                                <Input\r\n                                    type=\"checkbox\"\r\n                                    name=\"required\"\r\n                                    checked={formData.required}\r\n                                    onChange={handleChange}\r\n                                />{' '}\r\n                                Required\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <FormGroup check className=\"mb-0\">\r\n                            <Label check>\r\n                                <Input\r\n                                    type=\"checkbox\"\r\n                                    name=\"active\"\r\n                                    checked={formData.active}\r\n                                    onChange={handleChange}\r\n                                />{' '}\r\n                                Is Active\r\n                            </Label>\r\n                        </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-end mt-4\">\r\n                        <Button color=\"secondary\" onClick={toggle} className=\"me-2\">\r\n                            CANCEL\r\n                        </Button>\r\n                        <Button color=\"primary\" onClick={handleSave}>\r\n                            SAVE\r\n                        </Button>\r\n                    </div>\r\n                </Form>\r\n            </ModalBody>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default FieldModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}