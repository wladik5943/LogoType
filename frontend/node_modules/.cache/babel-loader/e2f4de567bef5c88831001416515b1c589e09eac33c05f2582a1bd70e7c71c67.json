{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Modal,ModalHeader,ModalBody,ModalFooter,Form,FormGroup,Label,Input,Button}from'reactstrap';import api from'../api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const EditTestModal=_ref=>{let{isOpen,toggle,test,onUpdated}=_ref;const[title,setTitle]=useState('');const[fields,setFields]=useState([]);const[selectedFields,setSelectedFields]=useState([]);const[saving,setSaving]=useState(false);useEffect(()=>{if(test){var _test$fields;setTitle(test.title||'');const ids=((_test$fields=test.fields)===null||_test$fields===void 0?void 0:_test$fields.map(f=>f.id))||[];setSelectedFields(ids);}},[test]);useEffect(()=>{api.get('/fields').then(res=>{var _res$data;setFields(((_res$data=res.data)===null||_res$data===void 0?void 0:_res$data.content)||res.data||[]);});},[]);const handleFieldToggle=fieldId=>{setSelectedFields(prev=>prev.includes(fieldId)?prev.filter(id=>id!==fieldId):[...prev,fieldId]);};const handleSubmit=async()=>{if(!title||selectedFields.length===0){alert(\"Заполни название и выбери поля.\");return;}setSaving(true);try{await api.put(\"/questionnaires/\".concat(test.id),{title,fieldIds:selectedFields});onUpdated();}catch(e){console.error(\"Ошибка при обновлении:\",e);alert(\"Ошибка при сохранении.\");}finally{setSaving(false);}};return/*#__PURE__*/_jsxs(Modal,{isOpen:isOpen,toggle:toggle,children:[/*#__PURE__*/_jsx(ModalHeader,{toggle:toggle,children:\"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0442\\u0435\\u0441\\u0442\\u0430\"}),/*#__PURE__*/_jsx(ModalBody,{children:/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0442\\u0435\\u0441\\u0442\\u0430\"}),/*#__PURE__*/_jsx(Input,{value:title,onChange:e=>setTitle(e.target.value),placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u043F\\u043E\\u043B\\u044F\"}),fields.map(field=>/*#__PURE__*/_jsx(FormGroup,{check:true,children:/*#__PURE__*/_jsxs(Label,{check:true,children:[/*#__PURE__*/_jsx(Input,{type:\"checkbox\",checked:selectedFields.includes(field.id),onChange:()=>handleFieldToggle(field.id)}),' ',field.label,\" (\",field.type,\")\"]})},field.id))]})]})}),/*#__PURE__*/_jsxs(ModalFooter,{children:[/*#__PURE__*/_jsx(Button,{color:\"secondary\",onClick:toggle,children:\"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"}),/*#__PURE__*/_jsx(Button,{color:\"primary\",onClick:handleSubmit,disabled:saving,children:saving?\"Сохраняем...\":\"Сохранить\"})]})]});};","map":{"version":3,"names":["React","useEffect","useState","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","Button","api","jsx","_jsx","jsxs","_jsxs","EditTestModal","_ref","isOpen","toggle","test","onUpdated","title","setTitle","fields","setFields","selectedFields","setSelectedFields","saving","setSaving","_test$fields","ids","map","f","id","get","then","res","_res$data","data","content","handleFieldToggle","fieldId","prev","includes","filter","handleSubmit","length","alert","put","concat","fieldIds","e","console","error","children","value","onChange","target","placeholder","field","check","type","checked","label","color","onClick","disabled"],"sources":["D:/progects/SoftArex/FrontEnd/src/modalWindows/EditTestModal.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Modal, ModalHeader, ModalBody, ModalFooter,\r\n    Form, FormGroup, Label, Input, Button\r\n} from 'reactstrap';\r\nimport api from '../api';\r\n\r\nexport const EditTestModal = ({ isOpen, toggle, test, onUpdated }) => {\r\n    const [title, setTitle] = useState('');\r\n    const [fields, setFields] = useState([]);\r\n    const [selectedFields, setSelectedFields] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (test) {\r\n            setTitle(test.title || '');\r\n            const ids = test.fields?.map(f => f.id) || [];\r\n            setSelectedFields(ids);\r\n        }\r\n    }, [test]);\r\n\r\n    useEffect(() => {\r\n        api.get('/fields').then(res => {\r\n            setFields(res.data?.content || res.data || []);\r\n        });\r\n    }, []);\r\n\r\n    const handleFieldToggle = (fieldId) => {\r\n        setSelectedFields(prev =>\r\n            prev.includes(fieldId)\r\n                ? prev.filter(id => id !== fieldId)\r\n                : [...prev, fieldId]\r\n        );\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        if (!title || selectedFields.length === 0) {\r\n            alert(\"Заполни название и выбери поля.\");\r\n            return;\r\n        }\r\n\r\n        setSaving(true);\r\n        try {\r\n            await api.put(`/questionnaires/${test.id}`, {\r\n                title,\r\n                fieldIds: selectedFields\r\n            });\r\n            onUpdated();\r\n        } catch (e) {\r\n            console.error(\"Ошибка при обновлении:\", e);\r\n            alert(\"Ошибка при сохранении.\");\r\n        } finally {\r\n            setSaving(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal isOpen={isOpen} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>Редактирование теста</ModalHeader>\r\n            <ModalBody>\r\n                <Form>\r\n                    <FormGroup>\r\n                        <Label>Название теста</Label>\r\n                        <Input\r\n                            value={title}\r\n                            onChange={e => setTitle(e.target.value)}\r\n                            placeholder=\"Введите название\"\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label>Выбери поля</Label>\r\n                        {fields.map(field => (\r\n                            <FormGroup check key={field.id}>\r\n                                <Label check>\r\n                                    <Input\r\n                                        type=\"checkbox\"\r\n                                        checked={selectedFields.includes(field.id)}\r\n                                        onChange={() => handleFieldToggle(field.id)}\r\n                                    />{' '}\r\n                                    {field.label} ({field.type})\r\n                                </Label>\r\n                            </FormGroup>\r\n                        ))}\r\n                    </FormGroup>\r\n                </Form>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"secondary\" onClick={toggle}>Отмена</Button>\r\n                <Button color=\"primary\" onClick={handleSubmit} disabled={saving}>\r\n                    {saving ? \"Сохраняем...\" : \"Сохранить\"}\r\n                </Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}