{"ast":null,"code":"import _objectSpread from\"D:/progects/SoftArex/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useState}from'react';import{Container,Spinner,Card,CardBody,CardTitle,Button,Row,Col}from'reactstrap';import{useLocation,useNavigate}from'react-router-dom';import api from'../api';import{EditTestModal}from\"../modalWindows/EditTestModal\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TestSelectionPage=()=>{const[tests,setTests]=useState([]);const[loading,setLoading]=useState(true);const navigate=useNavigate();const location=useLocation();const mode=new URLSearchParams(location.search).get(\"mode\")||\"all\";const[editModalOpen,setEditModalOpen]=useState(false);const[currentEditTest,setCurrentEditTest]=useState(null);const fetchTests=async()=>{setLoading(true);try{const url=mode===\"mine\"?\"/questionnaires/mine\":\"/questionnaires/all\";const response=await api.get(url);setTests(response.data||[]);}catch(err){console.error('Ошибка при загрузке тестов:',err);}finally{setLoading(false);}};useEffect(()=>{fetchTests();},[mode]);const openEditModal=test=>{setCurrentEditTest(test);setEditModalOpen(true);};const handleSelect=id=>{if(mode==='mine'){navigate(\"/answers/\".concat(id));}else{navigate(\"/questionnaires/\".concat(id));}};return/*#__PURE__*/_jsxs(Container,{className:\"mt-5\",children:[mode=='all'&&/*#__PURE__*/_jsx(\"h3\",{children:\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0442\\u0435\\u0441\\u0442\"}),loading?/*#__PURE__*/_jsx(\"div\",{className:\"text-center mt-4\",children:/*#__PURE__*/_jsx(Spinner,{color:\"primary\"})}):/*#__PURE__*/_jsx(Row,{className:\"mt-4\",children:tests.filter(test=>mode!=='all'||test.active).map(test=>/*#__PURE__*/_jsx(Col,{md:\"6\",lg:\"4\",className:\"mb-4\",children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Card,{className:\"h-100\",children:/*#__PURE__*/_jsxs(CardBody,{className:\"d-flex flex-column\",children:[/*#__PURE__*/_jsx(CardTitle,{tag:\"h5\",className:\"mb-3 card-title-fixed\",children:test.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-auto d-flex flex-column gap-2\",children:[mode==='mine'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-check form-switch\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-check-input\",type:\"checkbox\",id:\"activeSwitch-\".concat(test.id),checked:test.active,onChange:async()=>{try{await api.patch(\"/questionnaires/\".concat(test.id,\"/status\"));// обновим локальный список тестов\nsetTests(prev=>prev.map(t=>t.id===test.id?_objectSpread(_objectSpread({},t),{},{active:!t.active}):t));}catch(err){console.error('Ошибка обновления активности анкеты',err);alert('Не удалось изменить статус активности');}}}),/*#__PURE__*/_jsx(\"label\",{className:\"form-check-label\",htmlFor:\"activeSwitch-\".concat(test.id),children:test.active?'Активна':'Неактивна'})]}),mode==='mine'?/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex flex-wrap gap-2\",children:[/*#__PURE__*/_jsx(Button,{color:\"info\",onClick:()=>handleSelect(test.id),children:\"\\u041E\\u0442\\u0432\\u0435\\u0442\\u044B \\u043D\\u0430 \\u0430\\u043D\\u043A\\u0435\\u0442\\u0443\"}),/*#__PURE__*/_jsx(Button,{color:\"warning\",onClick:()=>openEditModal(test),children:\"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"})]}):/*#__PURE__*/_jsx(Button,{color:\"primary\",onClick:()=>handleSelect(test.id),children:\"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043A \\u0442\\u0435\\u0441\\u0442\\u0443\"})]})]})})})},test.id))}),currentEditTest&&/*#__PURE__*/_jsx(EditTestModal,{isOpen:editModalOpen,toggle:()=>setEditModalOpen(!editModalOpen),test:currentEditTest,onUpdated:()=>{setEditModalOpen(false);fetchTests();}})]});};export default TestSelectionPage;","map":{"version":3,"names":["React","useEffect","useState","Container","Spinner","Card","CardBody","CardTitle","Button","Row","Col","useLocation","useNavigate","api","EditTestModal","jsx","_jsx","jsxs","_jsxs","TestSelectionPage","tests","setTests","loading","setLoading","navigate","location","mode","URLSearchParams","search","get","editModalOpen","setEditModalOpen","currentEditTest","setCurrentEditTest","fetchTests","url","response","data","err","console","error","openEditModal","test","handleSelect","id","concat","className","children","color","filter","active","map","md","lg","tag","title","type","checked","onChange","patch","prev","t","_objectSpread","alert","htmlFor","onClick","isOpen","toggle","onUpdated"],"sources":["D:/progects/SoftArex/FrontEnd/src/pages/TestSelectionPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Container,\r\n    Spinner,\r\n    Card,\r\n    CardBody,\r\n    CardTitle,\r\n    Button,\r\n    Row,\r\n    Col\r\n} from 'reactstrap';\r\nimport {useLocation, useNavigate} from 'react-router-dom';\r\nimport api from '../api';\r\nimport {EditTestModal} from \"../modalWindows/EditTestModal\";\r\n\r\nconst TestSelectionPage = () => {\r\n    const [tests, setTests] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const mode = new URLSearchParams(location.search).get(\"mode\") || \"all\";\r\n    const [editModalOpen, setEditModalOpen] = useState(false);\r\n    const [currentEditTest, setCurrentEditTest] = useState(null);\r\n\r\n\r\n\r\n    const fetchTests = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const url = mode === \"mine\" ? \"/questionnaires/mine\" : \"/questionnaires/all\";\r\n            const response = await api.get(url);\r\n            setTests(response.data || []);\r\n        } catch (err) {\r\n            console.error('Ошибка при загрузке тестов:', err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        fetchTests();\r\n    }, [mode]);\r\n\r\n\r\n    const openEditModal = (test) => {\r\n        setCurrentEditTest(test);\r\n        setEditModalOpen(true);\r\n    };\r\n\r\n    const handleSelect = (id) => {\r\n        if (mode === 'mine') {\r\n            navigate(`/answers/${id}`);\r\n        } else {\r\n            navigate(`/questionnaires/${id}`);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <Container className=\"mt-5\">\r\n            {mode == 'all'&&\r\n                <h3>Выберите тест</h3>\r\n            }\r\n            {loading ? (\r\n                <div className=\"text-center mt-4\">\r\n                    <Spinner color=\"primary\" />\r\n                </div>\r\n            ) : (\r\n                <Row className=\"mt-4\">\r\n                    {tests\r\n                        .filter(test => mode !== 'all' || test.active)\r\n                        .map((test) => (\r\n                        <Col md=\"6\" lg=\"4\" className=\"mb-4\" key={test.id}>\r\n                            <Card>\r\n                                <Card className=\"h-100\">\r\n                                    <CardBody className=\"d-flex flex-column\">\r\n                                        <CardTitle tag=\"h5\" className=\"mb-3 card-title-fixed\">{test.title}</CardTitle>\r\n\r\n                                        <div className=\"mt-auto d-flex flex-column gap-2\">\r\n                                            {mode === 'mine' && (\r\n                                                <div className=\"form-check form-switch\">\r\n                                                    <input\r\n                                                        className=\"form-check-input\"\r\n                                                        type=\"checkbox\"\r\n                                                        id={`activeSwitch-${test.id}`}\r\n                                                        checked={test.active}\r\n                                                        onChange={async () => {\r\n                                                            try {\r\n                                                                await api.patch(`/questionnaires/${test.id}/status`);\r\n                                                                // обновим локальный список тестов\r\n                                                                setTests(prev =>\r\n                                                                    prev.map(t =>\r\n                                                                        t.id === test.id ? {...t, active: !t.active} : t\r\n                                                                    )\r\n                                                                );\r\n                                                            } catch (err) {\r\n                                                                console.error('Ошибка обновления активности анкеты', err);\r\n                                                                alert('Не удалось изменить статус активности');\r\n                                                            }\r\n                                                        }}\r\n                                                    />\r\n                                                    <label\r\n                                                        className=\"form-check-label\"\r\n                                                        htmlFor={`activeSwitch-${test.id}`}\r\n                                                    >\r\n                                                        {test.active ? 'Активна' : 'Неактивна'}\r\n                                                    </label>\r\n                                                </div>\r\n                                            )}\r\n\r\n                                            {mode === 'mine' ? (\r\n                                                <div className=\"d-flex flex-wrap gap-2\">\r\n                                                    <Button color=\"info\" onClick={() => handleSelect(test.id)}>\r\n                                                        Ответы на анкету\r\n                                                    </Button>\r\n                                                    <Button color=\"warning\" onClick={() => openEditModal(test)}>\r\n                                                        Редактировать\r\n                                                    </Button>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <Button color=\"primary\" onClick={() => handleSelect(test.id)}>\r\n                                                    Перейти к тесту\r\n                                                </Button>\r\n                                            )}\r\n                                        </div>\r\n\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Card>\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n            )}\r\n            {currentEditTest && (\r\n                <EditTestModal\r\n                    isOpen={editModalOpen}\r\n                    toggle={() => setEditModalOpen(!editModalOpen)}\r\n                    test={currentEditTest}\r\n                    onUpdated={() => {\r\n                        setEditModalOpen(false);\r\n                        fetchTests()\r\n                    }}\r\n                />\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default TestSelectionPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}